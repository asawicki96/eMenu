version: '3.5'
services:
    redis:
        image: redis:6.0.8
        ports:
            - "6379:6379"
        networks:
            - backend

    db:
        image: postgres
        env_file: 
            - cfg.env
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - backend

    backend:
        build: .
        ports:
            - "8000:8000"
        
        command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

        env_file: 
            - cfg.env
        links:
            - db
        depends_on: 
            - db
        volumes:
            - ./app:/app
        networks:
            - backend
            
    celery:
        build: .
        command: sh -c "celery -A eMenu worker -l info --uid=nobody --gid=nogroup"

        env_file: 
            - cfg.env
        networks: 
            - backend
            
        volumes:
            - "./app:/app"
        links:
            - db:db
        depends_on:
            - db
            - redis

    celery_beat:
        build: .
        command: sh -c "celery -A eMenu beat -l info --uid=nobody --gid=nogroup"
        env_file: 
            - cfg.env
        networks: 
            - backend
        links:
            - db
        depends_on:
            - db
            - redis
        volumes:
            - "./app:/app"

volumes:
  pgdata:

networks:
    backend:

